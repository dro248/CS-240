package client.views.mainWindow;

import java.awt.*;
import java.awt.event.*;
import javax.swing.*;
import shared.model.Cell;
import com.sun.org.apache.bcel.internal.classfile.Field;
import client.views.mainWindow.bottom.left.*;
import client.views.mainWindow.bottom.right.*;
import client.views.mainWindow.top.ImageViewer;
import client.facade.*;

@SuppressWarnings("serial")
public class Indexer extends JFrame implements BatchStateListener
{
	JMenuBar menuBar;
	JPanel buttonBar;
	JButton zoomInButton;
	JButton zoomOutButton;
	JButton invertButton;
	JButton toggleButton;
	JButton saveButton;
	JButton submitButton;
	JSplitPane v_SplitPane;
	JSplitPane h_SplitPane;
	JComponent imageViewer;
	JTabbedPane leftTabbedPane;
	JTabbedPane rightTabbedPane;
	JPanel tableEntry;
	JPanel formEntry;
	JPanel fieldHelp;
	JPanel imageNavigation;
	BatchState batchState;		// this is referencing the same batchState within the clientFacade

	public Indexer(String title)
	{
		super(title);
		batchState = ClientFacade.get().getBatchState();
		batchState.addListener(this);
		

		initialize();
		createComponents();
	}
	
	void initialize()
	{
		menuBar 		= new WindowMenuBar();
		buttonBar 		= new JPanel();
		zoomInButton	= new JButton("Zoom In");
		zoomOutButton	= new JButton("Zoom Out");
		invertButton	= new JButton("Invert Image");
		toggleButton	= new JButton("Toggle Highlights");
		saveButton		= new JButton("Save");
		submitButton	= new JButton("Submit");
		v_SplitPane 	= new JSplitPane(JSplitPane.VERTICAL_SPLIT);
		h_SplitPane		= new JSplitPane(JSplitPane.HORIZONTAL_SPLIT);
		imageViewer		= new ImageViewer();
		leftTabbedPane 	= new JTabbedPane();
		rightTabbedPane	= new JTabbedPane();
		tableEntry		= new TableEntryPanel();
		formEntry		= new FormEntryPanel();
		fieldHelp		= new FieldHelpPanel();
		imageNavigation = new ImageNavigationPanel();
	}
	
	public void createComponents()
	{
		this.setLocation(batchState.getWindowPosition().get_X(), batchState.getWindowPosition().get_X());
		this.setPreferredSize(batchState.getWindowSize());
		this.setLayout(new BorderLayout());
		
		// Set MenuBar
		setJMenuBar(menuBar);
		
		// Create buttonBar
		buttonBar.setLayout(new BoxLayout(buttonBar, BoxLayout.X_AXIS));		
		buttonBar.add(zoomInButton);
		buttonBar.add(zoomOutButton);
		buttonBar.add(invertButton);
		buttonBar.add(toggleButton);
		buttonBar.add(saveButton);
		buttonBar.add(submitButton);
		this.add(buttonBar, BorderLayout.NORTH);
		
		// setup TabbedPanes
		leftTabbedPane.addTab("Table Entry", tableEntry);
		leftTabbedPane.addTab("Form Entry", formEntry);
		
		rightTabbedPane.addTab("Field Help", fieldHelp);
		rightTabbedPane.addTab("Image Navigation", imageNavigation);
		
		
		// setup Horizontal splitPane
		h_SplitPane.setLeftComponent(leftTabbedPane);
		h_SplitPane.setRightComponent(rightTabbedPane);
		
		// setup Vertical splitPane
		v_SplitPane.setTopComponent(imageViewer);
		v_SplitPane.setBottomComponent(h_SplitPane);
		
		v_SplitPane.setOneTouchExpandable(true);
		v_SplitPane.setDividerLocation(150);
		
		this.add(v_SplitPane, BorderLayout.CENTER);
		
		// add event_listeners for buttons
		saveButton.addActionListener(new ActionListener()
		{
			@Override
			public void actionPerformed(ActionEvent arg0)
			{
				batchState.save();
			}
		});
		
		
		this.pack();
	}

	@Override
	public void valueChanged(Cell cell, String newValue) 
	{
		// TODO Auto-generated method stub
		
	}

	@Override
	public void selectedCellChanged(Cell newSelectedCell) 
	{
		// TODO Auto-generated method stub
		
	}

	public Coordinate getWindowPosition() 	{ return new Coordinate(this.getX(), this.getY()); }
	public Dimension getWindowSize()		{ return this.getSize(); }
}
