package server.database;

import java.io.*;
import java.sql.*;
import java.util.logging.*;


public class Database 
{	
	private static final String DATABASE_DIRECTORY = "database";
	private static final String DATABASE_FILE = "FamilySearchDB.sqlite";
	private static final String DATABASE_URL = "jdbc:sqlite:" + DATABASE_DIRECTORY + File.separator + DATABASE_FILE;
//	private static Logger logger;
	
	// DAOs & Connection
	private BatchDAO batchDAO;
	private CellDAO cellDAO;
	private FieldDAO fieldDAO;
	private ProjectDAO projectDAO;
	private RecordDAO recordDAO;
	private UserDAO userDAO;
	private Connection connection;
	
	// GETTERS
	public BatchDAO getBatchDAO() 		{ return batchDAO;		}
	public CellDAO getCellDAO() 		{ return cellDAO;		}
	public FieldDAO getFieldDAO() 		{ return fieldDAO;		}
	public ProjectDAO getProjectDAO() 	{ return projectDAO;	}
	public RecordDAO getRecordDAO() 	{ return recordDAO;		}
	public UserDAO getUserDAO() 		{ return userDAO;		}
	public Connection getConnection() 	{ return connection;	}
	
	
	// We don't need this...
/*	static 
	{
//		logger = Logger.getLogger("contactmanager");
		System.out.println("");
	}*/

	public static void initialize() throws DatabaseException 
	{
		try
		{
			final String driver = "org.sqlite.JDBC";
			Class.forName(driver);
		}
		catch(ClassNotFoundException e) 
		{
			DatabaseException serverEx = new DatabaseException("[Database.initialize()] Could not load database driver", e);
//			logger.throwing("server.database.Database", "initialize", serverEx);
			throw serverEx; 
		}
	}

	
	public Database() 
	{
		batchDAO 	= new BatchDAO(this);
		cellDAO 	= new CellDAO(this);
		fieldDAO	= new FieldDAO(this);
		projectDAO	= new ProjectDAO(this);
		recordDAO	= new RecordDAO(this);
		userDAO		= new UserDAO(this);
		connection 	= null;
	}
	
	
	

	public void startTransaction() throws DatabaseException 
	{
		try 
		{
			assert (connection == null);			
			connection = DriverManager.getConnection(DATABASE_URL);
			connection.setAutoCommit(false);
		}
		catch (SQLException e) 
		{
			throw new DatabaseException("[Database.startTransaction()] Could not connect to database. Make sure " 
					+ DATABASE_FILE + " is available in ./" + DATABASE_DIRECTORY, e);
		}
	}
	
	public void endTransaction(boolean commit) 
	{
		if (connection != null) 
		{		
			try 
			{
				if (commit) { connection.commit(); }
				else { connection.rollback(); }
			}
			catch (SQLException e) 
			{
				System.out.println("Could not end transaction");
				e.printStackTrace();
			}
			finally 
			{
				safeClose(connection);
				connection = null;
			}
		}
	}
	
	public static void safeClose(Connection conn) 
	{
		if (conn != null) 
		{
			try 
			{
				conn.close();
			}
			catch (SQLException e) 
			{
				// ...
			}
		}
	}
	
	public static void safeClose(Statement stmt) 
	{
		if (stmt != null) 
		{
			try 
			{
				stmt.close();
			}
			catch (SQLException e) 
			{
				// ...
			}
		}
	}
	
	public static void safeClose(PreparedStatement stmt) 
	{
		if (stmt != null) 
		{
			try 
			{
				stmt.close();
			}
			catch (SQLException e) 
			{
				// ...
			}
		}
	}
	
	public static void safeClose(ResultSet rs) 
	{
		if (rs != null) 
		{
			try 
			{
				rs.close();
			}
			catch (SQLException e) 
			{
				// ...
			}
		}
	}
	
}